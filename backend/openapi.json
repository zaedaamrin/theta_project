{
  "openapi": "3.0.3",
  "info": {
    "title": "Smart Memory API 3.0",
    "description": "The Smart Memory Server provides a suite of API endpoints to manage and interact with data intelligently. Below, youâ€™ll find detailed documentation for each available API request, including methods for data storage, retrieval, and processing. Use these endpoints to seamlessly integrate with the server's capabilities, ensuring efficient access to stored information and advanced functionalities.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "paths": {
    "/api/{userId}/chats": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Get this user's chats",
        "description": "Returns a list of this user's chats",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Chat"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              }
            }
          },
          "404": {
            "description": "Chat or user not found"
          }
        }
      },
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Create a new chat",
        "description": "Create a new chat for this user.",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created new chat!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/{userId}/chats/{chatId}": {
      "get": {
        "tags": [
          "chat"
        ],
        "summary": "Get the chat's history",
        "description": "Retrieve the list of messages in the chat history of this chat",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "ID of the chat",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved chat messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Message"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Chat or user not found"
          }
        }
      },
      "delete": {
        "tags": [
          "chat"
        ],
        "summary": "Delete a chat",
        "description": "Delete this chat from this user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "ID of the chat",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted chat"
          },
          "404": {
            "description": "Invalid chat or user ID"
          }
        }
      },
      "post": {
        "tags": [
          "chat"
        ],
        "summary": "Post a message to chat and get answer",
        "description": "Send a message to a chat and receieve the AI model's response",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "chatId",
            "required": true,
            "description": "ID of the chat",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "how many tomatoes?"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully sent message in chat",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "404": {
            "description": "Chat or user not found"
          }
        }
      }
    },
    "/api/{userId}/sources": {
      "get": {
        "tags": [
          "source"
        ],
        "summary": "Get sources from user's library",
        "description": "Returns a list of the user's sources",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sources for user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Username not found"
          }
        }
      },
      "post": {
        "tags": [
          "source"
        ],
        "summary": "Create a new source",
        "description": "Upload new sources to the user's library",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://arxiv.org/html/2410.21256v1"
                    },
                    "title": {
                      "type": "string",
                      "example": "Multi-modal AI for comprehensive breast cancer prognostication"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Added new sources!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Source"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid user id or source"
          }
        }
      }
    },
    "/api/{userId}/sources/{sourceId}": {
      "get": {
        "tags": [
          "source"
        ],
        "summary": "Get the content of this source",
        "description": "Returns a list of the content stored from this source in the user's library",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "description": "ID of the source",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved content!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Content"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Content"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User or source not found"
          }
        }
      },
      "delete": {
        "tags": [
          "source"
        ],
        "summary": "Delete a source",
        "description": "Delete a source from the user's library",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "ID of the user",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "sourceId",
            "required": true,
            "description": "ID of the source",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted source"
          },
          "404": {
            "description": "User or source not found"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all users",
        "description": "Get a list of all users and their meta data",
        "responses": {
          "200": {
            "description": "Retrieved all users!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Users not found"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "description": "Create a new user from user sign up form",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string",
                      "example": "user1"
                    },
                    "password": {
                      "type": "string",
                      "example": "secretpassword1"
                    },
                    "email": {
                      "type": "string",
                      "example": "user@gmail.com"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user input, cannot create user"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Chat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "lastOpenedDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-25T08:00:00"
          }
        },
        "xml": {
          "name": "chat"
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "example": 0
          },
          "chatId": {
            "type": "integer",
            "format": "int64",
            "example": 8
          },
          "sender": {
            "type": "string",
            "example": "John Smith"
          },
          "messageContent": {
            "type": "string",
            "example": "How many tomatoes?"
          },
          "generatedAnswer": {
            "type": "string",
            "example": "3 tomatoes"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-25T08:00:00"
          }
        },
        "xml": {
          "name": "message"
        }
      },
      "Source": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 23
          },
          "url": {
            "type": "string",
            "example": "https://arxiv.org/html/2410.21256v1"
          },
          "userId": {
            "type": "integer",
            "example": 0
          },
          "contentId": {
            "type": "integer",
            "example": 28
          },
          "title": {
            "type": "string",
            "example": "Multi-modal AI for comprehensive breast cancer prognostication"
          },
          "tags": {
            "type": "string",
            "example": "cancer"
          }
        },
        "xml": {
          "name": "source"
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "sourceId": {
            "type": "integer",
            "format": "int64",
            "example": 23
          },
          "content": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi quis dictum urna, vitae sagittis nulla. Sed dolor erat, sodales a leo a, pretium dapibus nisl. Maecenas efficitur luctus porta. Maecenas nec rutrum leo, id dictum massa. Aliquam consequat nibh turpis, at consectetur urna ullamcorper eu. Suspendisse ullamcorper turpis in tristique volutpat. Cras luctus, augue in dictum bibendum, turpis nisl fermentum nisl, quis mattis enim eros eget nisl. Proin finibus tortor vel gravida volutpat. Pellentesque non pretium est, id vestibulum libero."
          },
          "contentEmbedding": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "float"
            }
          },
          "embeddingDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "xml": {
          "name": "content"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-25T08:00:00"
          }
        },
        "xml": {
          "name": "user"
        }
      }
    }
  }
}